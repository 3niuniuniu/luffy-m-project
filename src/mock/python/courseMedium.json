[
  {
    "phase": "第一阶段: Python开发入门",
    "chapters": [
      {
        "chapterTitle": "第1章：计算机原理&Linux系统入门(3days)",
        "children": [
          "编程语言的作用",
          "操作系统和硬件的关系 ",
          "cpu、寄存器、内存、硬盘工作原理",
          "内核态与用户态及转换机制",
          "L1,L2缓存,RAM,闪存，CMOS",
          "磁盘结构、寻道与延迟时间",
          "虚拟内存与MMU",
          "设备驱动与控制器",
          "总线与南桥北桥",
          "操作系统的功能与发展史",
          "操作系统启动流程 ",
          "应用程序启动流程",
          "多道技术及进程、线程 ",
          "网络基础之osi七层协议",
          "linux操作系统介绍、安装",
          "linux操作系统维护常用命令 "
        ]
      },
      {
        "chapterTitle": "第2章：Python基础语法入门(2days)",
        "children": [
          "编程语言分类、解释型vs编译型优缺点",
          "Python环境安装、Pycharm IDE使用",
          "基本语法：变量、常量命名规范、程序执行、编码区别  ",
          "二进制的演化与运算",
          ".pyc是什么鬼？",
          "实战案例：用户交互小程序",
          "基本数据类型：int、str、bool、list、dict、set",
          "流程控制：if、elif、else、for、while语句",
          "break vs continue的作用",
          "实战案例：猜年龄游戏",
          "实战案例：用户登录认证程序开发"
        ]
      },
      {
        "chapterTitle": "第3章：数据类型、字符编码、文件操作(3days)",
        "children": [
          "Python 2 vs Python3的编码区别",
          "py2 vs py3上的bytes 与str 的恩恩怨怨",
          "文件IO处理，通过python对文件实现增删改查",
          "三元表达式",
          "十六进制、二进制、八进制、十进制的互相转换",
          "数据类型list , tuple , dict , set , str详细讲解",
          "实战案例：三级菜单程序开发",
          "实战案例： 购物车程序开发"
        ]
      }
    ],
    "studyTarget": "可掌握的核心能力：</br>1、掌握基本的Linux系统操作；</br>2、掌握Python基础编程语法；</br>3、建立起基本编程思维。</br>可解决的现实问题：</br>字符串排序，切割，逆置；猜数字、用户认证、三级菜单、购物车程序；</br>市场价值：</br>具备编程思维，掌握Python基本语法，能开发出一些小游戏，但尚不能达到任何企业用人标准。</br>"
  },
  {
    "phase": "第二阶段：函数编程&常用标准库",
    "chapters": [
      {
        "chapterTitle": "第4章：函数、递归、生成器、迭代器(5days)",
        "children": [
          "函数语法",
          "函数参数、返回值、高阶函数、嵌套函数",
          "全局变量与局部变量",
          "递归原理与特性",
          "通过递归实现斐波那契数列运算",
          "名字空间、LEGB、闭包原理",
          "迭代器、生成器、列表推导式",
          "通过生成器实现生产者消费者模型",
          "装饰器作用、原理、与实际应用",
          "内置方法：all、sorted、eval、compile、reduce、filter….",
          "实战案例：员工信息表程序开发"
        ]
      },
      {
        "chapterTitle": "第5章：常用模块学习(5days)",
        "children": [
          "相对导入与绝对导入",
          "常用标准库os、sys、time、datetime、random、re、json、pickle、shelve、shutil学习",
          "常用标准库configparser配置文件解析、logging日志、xml处理、subprocess命令交互等模块学习",
          "实战案例：通过random模块生成随机验证码",
          "实战案例：通过subprocess模块开发简单ssh命令客户端",
          "实战案例：通过logging模块开发日志分析程序",
          "实战案例：通过re模块开发可处理加、减、乘、除、拓号的计算器程序",
          "软件开发目录结构规范",
          "实战案例：ATM程序开发"
        ]
      }
    ],
    "studyTarget": "可掌握的核心能力：</br>1、掌握文件操作、字符编码及转换、函数编程等开发人员必备基础知识 </br>2、掌握常用Python的标准库，如re正则、logging日志、json&pickle、模块间相互调用等知识</br>3、建立编程思维和软件开发规范，写代码不再只注重功能实现，还要考虑可扩展性、稳定性。</br>可解决的现实问题：</br>字符编码转换、文件的增删改查、配置文件解析、可开发出复杂一点的程序，掌握500-1000行代码的小项目开发与维护</br>市场价值：</br>具备编程思维，掌握Python常用语法和标准库的使用，能开发出一些小项目如员工信息表、ATM程序，编写的代码已初具规模，但离企业用人标准尚有差距。"
  },
  {
    "phase": "第三阶段：面向对象编程&网络编程基础",
    "chapters": [
      {
        "chapterTitle": "第6章：面向对象编程(3days)",
        "children": [
          "面向对象介绍及特性",
          "类、对象、属性、方法定义",
          "类的语法、构造函数的作用",
          "成员变量、私有变量、类变量的区别",
          "三大特性：封装、继承、多态实例讲解",
          "类的生成原理、MetaClass、__new__的作用、抽象类",
          "静态属性、静态方法、类方法、属性方法",
          "反射的语法及妙用",
          "领域建模",
          "如何在程序中使用面向对象思想写程序",
          "实战案例：选课系统开发"
        ]
      },
      {
        "chapterTitle": "第7章：网络编程(7days)",
        "children": [
          "Socket原理介绍",
          "Socket网络套接字模块学习（socket、socketserver）",
          "实战案例：通过socket实现文件在不同服务器间发送",
          "如何解决socket粘包问题",
          "实战案例：远程命令执行客户端开发",
          "socketserver源码剖析",
          "实战案例：基于C/S架构开发支持多用户在线的FTP服务器，实现文件上传下载、权限管理",
          "实现文件发送进度条、断点续传、文件一致性校验、用户加密认证等功能"
        ]
      }
    ],
    "studyTarget": "可掌握的核心能力：</br>1、掌握面向对象开发思维</br>2、掌握网络编程基础知识</br>3、掌握Socket模块使用</br>可解决的现实问题：</br>基于面向对象思维设计和开发可扩展的小项目，已能够开发可在生产环境使用的FTP服务器。</br>市场价值：</br>具备面向对象编程思维，熟练掌握Python常用语法和标准库的使用，能开发出1000-2000行以内的小项目，编写的代码已初具规模，能达到企业对初级开发人员的最低要求。市场工资在5000-6000之间</br>"
  },
  {
    "phase": "第四阶段：核心网络编程&数据库开发",
    "chapters": [
      {
        "chapterTitle": "第8章：线程、进程、IO多路复用(4days)",
        "children": [
          "进程、线程、协程演化史、特点",
          "线程与进程的区别及优缺点",
          "python GIL全局解释器锁原理",
          "互斥锁、信号、事件、join、队列",
          "通过queue实现线程间通信",
          "通过manger、管道实现进程间通信",
          "GIL、进程间通信、管道、队列",
          "生产者消费者模型、",
          "异步模型与事件驱动",
          "IO多路复用模型原理",
          "select、poll、epoll 高性能IO模型源码实例解析",
          "实战案例：通过multiprocess+paramiko模块开发高并发远程主机批量命令执行+文件分发",
          "实战案例：通过select, selectors模块 实现基于IO多路的并发FTP程序"
        ]
      },
      {
        "chapterTitle": "第9章：数据库开发(14days)",
        "children": [
          "mysql 数据库安装、连接方式、启动、停止",
          "表字段类型、主键约束、表构建语句",
          "常用增删改查语句、分组、聚合",
          "外键关联、unique字段、表结构修改语法",
          "跨表查询,inner join,left join , right join ,full join语法",
          "复杂sql语句如group by 、子查询、函数的使用",
          "索引原理及作用、普通索引、多列索引、唯一索引、全文索引等",
          "基于hash  & b+树的实现原理，索引的优缺点剖析",
          "事务原理、ACID特性，应用场景讲解",
          "如何实现事务回滚",
          "触发器的特性、应用场景",
          "触发器的增删改查方法",
          "存储过程作用及应用场景演示",
          "存储过程创建、参数传递、流程控制语句if \\while\\repeat\\loop等，动态sql的创建",
          "视图的作用，为什么用视图？视图的使用场景",
          "如何对视图进行增删改查",
          "数据库权限管理、用户管理、授权语句",
          "数据库备份命令及工具讲解",
          "基于不同业务的数据库表结构设计、性能优化案例讲解",
          "实战案例：基于数据库的图书管理系统开发",
          "实战案例：基于数据库的学员管理系统开发"
        ]
      }
    ],
    "studyTarget": "可掌握的核心能力：</br>1、掌握网络编程进阶知识</br>2、掌握线程、进程、协程、IO多路复用的特性及使用</br>3、能够开发支持大并发的程序</br>4、掌握Mysql数据库各种简单至复杂的sql语句编写，有小型项目的表结构设计能力</br>可解决的现实问题：</br>掌握网络并发编程能力，可开发各种并行程序，如批量主机管理、爬虫等，提高程序生产效率</br>市场价值：</br>熟练掌握Python编程和数据库开发，能独立开发出5000行以内的项目，编写的代码符合企业开发规范，能达到企业对初级开发人员的要求。市场工资在6000－8000之间</br>"
  },
  {
    "phase": "第五阶段：前端开发",
    "chapters": [
      {
        "chapterTitle": "第10章：HTML\\CSS\\Javascript(3days)",
        "children": [
          "HTML标签之html\\meta\\div\\span\\a\\img\\input\\pre等使用",
          "select\\form\\textarea\\input系列表单的使用",
          "列表、超链接、表格、表单元素的使用",
          "CSS的基本概念及语法",
          "CSS选择器类型及优先级",
          "伪类选择器",
          "在html中使用css的方法",
          "文字、段落属性、背景属性、列表属性、布局属性",
          "display与overflow属性的应用及定位 ",
          "掌握定位属性的方向值有运用规范",
          "掌握z-index空间位置的运用规范",
          "Javascript概述及组成",
          "JS引用、变量、typeof、数据类型、表达式、运算符讲解",
          "流程控制之if、switch、for、跳转、while语句的使用",
          "函数、参数、局部变量、数组及编历方式"
        ]
      },
      {
        "chapterTitle": "第11章：DOM\\Juqery\\Bootstrap(4days)",
        "children": [
          "查找元素的各种方法",
          "节点遍历的各种方式",
          "window对象操作、全局作用域、location对象、navigator对象、screen及history对象讲解",
          "事件对象、鼠标、键盘、表单事件实例讲解",
          "DOMO级、DOM2级事件处理、事件冒泡、阻止事件传递、碰撞检测",
          "面向对象、继承、封装、多态、构造函数",
          "作用域、闭包、原型",
          "实战案例：购物商城开发，实现商品浏览、选择商品、加入购物车等功能",
          "jQuery介绍与入门",
          " jQuery选择器",
          "jQuery筛选器",
          "jQuery属性、文档、样式、扩展、事件、动画",
          "实战案例：加载、删除对话框",
          "实战案例：单行编辑框",
          "实战案例：全选反选取消",
          "实战案例：左侧菜单",
          "实战案例：Tab菜单",
          "实战案例：滚动菜单",
          "实战案例：返回顶部",
          "实战案例：点赞+1效果",
          "实战案例：跑马灯",
          "实战案例： 多行文本编辑",
          "实战案例： 轮播图",
          "Bootstrap 框架学习",
          "响应式布局学习",
          "实战案例：抽屉新热榜开发,实现登录注册、发布文章、段子、图片、多级评论、点赞、即时聊天等功能"
        ]
      }
    ],
    "studyTarget": "可掌握的核心能力：</br>1、可根据UI设计，开发web网站的前端页面；</br>2、PC端和移动端页面特效开发；</br>3、前端页面性能优化。</br>4、掌握原生JS和Jquey框架的使用</br>可解决的现实问题：</br>1、开发常见Web网站的前端页面和移动端H5页面；</br>2、跟后台进行数据交互通信。</br>市场价值：</br>掌握web开发技术，是全栈工程师必备技能，市场薪资8000-10000"
  },
  {
    "phase": "第六阶段：WEB框架开发",
    "chapters": [
      {
        "chapterTitle": "第12章：Django框架基础(5days)",
        "children": [
          "Web请求生命周期剖析",
          "自行开发一个简单的Web框架",
          "MTV\\MVC框架介绍",
          "Django框架基本使用",
          "路由系统url, 精确、模糊匹配模式、url分组",
          "视图views、Function based view VS Class based view",
          "get\\post请求方法分别处理",
          "通过Template模板语言返回动态数据到前端页面",
          "template tags使用",
          "HttpResponse\\render\\redirect等方法使用",
          "django orm介绍、models定义语法、各种sql增删改查语句使用",
          "FK\\M2M\\OneToOne\\CharField\\IntegerField\\Datefiled等字段讲解",
          "通过makemigrations\\migrate命令同步数据",
          "实战案例：图书管理系统开发"
        ]
      },
      {
        "chapterTitle": "第13章：Django框架进阶(5days)",
        "children": [
          "CSRF原理、csrf_token\\XSS跨站攻击防护",
          "跨站请求伪造",
          "中间件原理、工作流程、自定义中间件",
          "django paginator分页功能，自定义开发分页功能",
          "cache缓存系统，cache的作用与使用",
          "信号事件，通过给models绑定信号来监测数据库改动",
          "message组件，通过message实现在前端页面显示消息提示",
          "自定义用户认证系统",
          "实战案例：校花投票系统开发",
          "实战案例：问卷调查系统开发"
        ]
      },
      {
        "chapterTitle": "第14章：项目实战：BBS论坛项目开发(4days)",
        "children": [
          "开发基于django的自定义的用户认证",
          "开发多个论坛版块",
          "允许用户发贴、评论、点赞、收藏、帖子分页",
          "评论可多级展示、帖子置顶、头像更换",
          "支持文件上传下载"
        ]
      }
    ],
    "studyTarget": "可掌握的核心能力：</br>1、可根据产品原型图，开发web网站的前端界面；</br>2、可根据业务流程图，开发web网站的后台业务；</br>3、可根据web框架设计，设计数据库表结构；</br>可解决的现实问题：</br>1、高并发全功能的web网站开发；</br>2、BBS、博客系统开发 ；</br>3、根据实际需求设计可扩展的数据库表结构。</br>市场价值：</br>已基本掌握成为web全栈工程师的基本技能，可独立开发前端和后端业务，市场薪资10000-15000"
  },
  {
    "phase": "第七阶段：WEB框架开发进阶",
    "chapters": [
      {
        "chapterTitle": "第15章：Redis\\RabbitMQ\\Celery等企业常用组件(3days)",
        "children": [
          "Redis缓存系统使用",
          "Redis 支持的str \\ list \\set\\hash等类型讲解",
          "如何利用bitcount 以最节省空间的方式统计网站当前在线用户",
          "如何通过redis订阅发布功能实现批量任务处理",
          "RabbitMQ队列原理、特性、安装配置",
          "RabbitmQ 1对1队列，fanout\\direct\\topic模式实例讲解",
          "RabbitmQ Exchange各种参数配置",
          "实战案例：通过RabbitMQ实现 RPC通信",
          "Celery分布式任务队列原理、安装配置",
          "实战案例：通过Celery实现简单的任务负载均衡",
          "基于django-beat + celery 实现任务的web可视化配置"
        ]
      },
      {
        "chapterTitle": "第16章：轻量级Flask框架(2days)",
        "children": [
          "Flask框架介绍、我",
          "路由系统、自定义路由扩展",
          "Session 、 Cookie",
          "Http请求和响应",
          "蓝图",
          "消息闪现",
          "中间件",
          "Flask常用扩展",
          "WTForms",
          "使用SQLAchemy ORM",
          "Admin",
          "Restful",
          "自定义扩展"
        ]
      },
      {
        "chapterTitle": "第17章：项目实战：基于Tornado框架开发高并发WEB聊天软件(3days)",
        "children": [
          "路由系统",
          "RequestHandler",
          "模板语言",
          "Cookie和安全Cookie",
          "跨站伪造请求的防范",
          "静态文件和主动式文件缓存",
          "本地化",
          "非阻塞式异步请求",
          "源码剖析（一）：一个脚本引发的血案",
          "源码剖析（二）：待请求阶段",
          "源码剖析（三）：请求处理全过程",
          "实战案例：WEB聊天软件开发，实现支持多用户在线、1对1、1对多聊天等功能"
        ]
      },
      {
        "chapterTitle": "第18章：项目实战：Restful API框架(2days)",
        "children": [
          "RESTful API设计规范",
          "DjangoRestFramework框架基本配置",
          "序列化\\viewset\\url配置",
          "基于Session\\Oaauth进行用户认证",
          "权限和授权",
          "请求验证",
          "各种Status code",
          "filter过滤器",
          "FlaskRestFul"
        ]
      }
    ],
    "studyTarget": "可掌握的核心能力：</br>1、掌握web开发进阶知识；</br>2、灵活运用缓存、消息队列、中间件等技术来加快网站访问速度、支撑大并发请求</br>3、可设计符合企业规范的Restful API接口；</br>4、 掌握常用的web安全防护知识</br>5、 掌握Flask\\Tornado框架原理和基本使用</br>可解决的现实问题：</br>1、高并发全功能的web网站开发；</br>2、熟练使用各种web开发中的高级技术，使网站更稳定、安全、支持大并发请求 ；</br>市场价值：</br>已掌握成为web全栈工程师的必备技能，可独立开发前端和后端业务，市场薪资12000-18000"
  },
  {
    "phase": "第八阶段：爬虫实战",
    "chapters": [
      {
        "chapterTitle": "第19章：项目实战：爬虫开发实战(5days)",
        "children": [
          "request模块学习及常用参数介绍",
          "request模块session使用",
          "实战案例：自动登录抽屉新热榜并对新闻点赞",
          "实战案例：自动登录Github",
          "实战案例：爬去汽车之家新闻页面",
          "BeautifulSoup模块学习",
          "实战案例：破解web微信，通过爬虫登录微信，实现更换头像、获取联系人列表、给好友发送消息等功能",
          "高性能IO相关模块：asyncio、aiohttp、Twisted学习",
          "利用gevent协程模块自定义开发一个高并发异步非阻塞的爬虫框架",
          "Selenium自动化测试框架入门",
          "PhantomJS快速上手",
          "图片滑动验证码实现原理剖析",
          "实战案例：通过Selenium+PhantomJS破解滑动验证码",
          "Scrapy框架介绍",
          "Scrapy程序创建及运行",
          "Scrapy基本使用及选择器、url学习",
          "通过Scrapy发送post,get请求",
          "Scrapy自定义去重规则",
          "Scrapy持久化之pipeline",
          "Scrapy基于下载中间件实现代理",
          "Scrapy定制https证书",
          "实战案例：通过Scrapy登录拉勾网获取职位信息，并实现自动简历投递"
        ]
      }
    ],
    "studyTarget": "可掌握的核心能力：</br>1、掌握爬虫的工作原理和设计思想；</br>2、掌握反爬虫机制；</br>3、掌握分布式爬虫工具的使用。</br>可解决的现实问题：</br>1、定向抓取互联网中指定领域的海量信息；</br>2、可对抓取的数据根据业务进行数据分析、清洗、挖掘；</br>3、运用分布式爬虫，实现规模化数据采集。</br>市场价值：</br>具备互联网数据采集的爬虫开发能力，薪资普遍在11000-20000"
  },
  {
    "phase": "第九阶段：企业项目实战",
    "chapters": [
      {
        "chapterTitle": "第20章：企业开发应用工具(3days)",
        "children": [
          "git、github协作开发工具讲解",
          "jira bug、任务管理系统讲解",
          "接口测试、单元测试、自动化测试相关工具介绍",
          "敏捷开发与持续集成介绍",
          "持续集成工具jekins介绍",
          "Nginx高性能web框架介绍、安装、配置",
          "通过django+uwsgi+nginx在生产环境部署实现支持大并发请求",
          "配置django settings文件 ，使其可自动适应dev\\stage\\production环境的不同",
          "api接口文档编写示例",
          "如何通过CDN技术实现全球各地访问网站速度加快",
          "互联网企业大型项目架构图深度讲解"
        ]
      },
      {
        "chapterTitle": "第21章：项目实战：CRM项目实战(10days)",
        "children": [
          "CRM产品原型图设计",
          "CRM项目表结构设计",
          "讲师角色：可创建每节上课记录、管理班级、在线点名、批复作业、查看成绩",
          "学员角色：可在线提交作业、查看成绩、合同、推荐学员、在线成绩、下载课件",
          "销售角色：可创建客户、跟踪客户记录、在线办理报名手续、查看销售报表",
          "管理员角色：可创建课程、校区、创建账户、创建调查问卷、查看问卷报告",
          "实现不同的角色拥有不同的权限",
          "细致的权限划分、可以将权限控制到是否允许一按键就可以点击的级别",
          "确保权限框架的通用性、使其能轻易迁移到其它项目",
          "开发类似DjangoAdmin一样的通用后台管理平台、并可以扩展至其它项目",
          "使用统一的界面模版、不同的角色动态生产业务菜单"
        ]
      },
      {
        "chapterTitle": "第22章：前端框架VUE学习(3days)",
        "children": [
          "Vue架构剖析、mvvm开发思想",
          "Vue数据绑定与计算属性、条件渲染",
          "类与样式绑定、表单控件绑定、事件绑定",
          "webpack使用",
          "vue-router使用",
          "vuex单向数据流与应用结构",
          "vuex actions与mutations热重载",
          "实战案例：vue 单页面博客系统开发"
        ]
      },
      {
        "chapterTitle": "第23章：项目实战：路飞学城项目开发(15days)",
        "children": [
          "前后端分离项目架构及表结构设计",
          "基于django+django-rest-framework+mysql+vue+jenkins开发部署",
          "OAuth2 token 认证，使用 oauth2_provider 实现登陆会话信息的保持",
          "采用rest_framework 序列化以及自定义验证对请求数据合法性进行校验和认证",
          "滑动验证码使用 geetest 配合注册 防止频繁对发送验证码API的请求",
          "手机验证码服务API开发",
          "支持微信、QQ等第三方登录",
          "API访问接口速率限制",
          "资讯点赞、点踩、收藏、更换头像、提问、评论等功能开发",
          "课程优惠券、通用优惠券、用户贝里支付策略",
          "支持支付宝、微信、银联支付",
          "开发在线看课程视频，倍速播放功能",
          "支持在线交作业、在线课程练习功能",
          "定时任务：订单超过24小时未付款关闭、优惠券过期自动变更状态等",
          "学员未按时交作业自动扣奖学金，导师未及时批改作业自动扣辅导费",
          "微信开发：针对关注微信服务号的学员，各种业务操作对用户进行微信通知等",
          "为学员、导师、管理员、班主任开发不同的界面，不同角色间通过权限进行限制访问",
          "开发后台课程管理、会员管理、学员管理、导师管理、导师分配 、订单管理、评论管理、作业管理等功能"
        ]
      }
    ],
    "studyTarget": "可掌握的核心能力：</br>1、掌握企业大型项目中团队协作开发工具的使用；</br>2、掌握单元测试、持续集成流程，具备生产环境应用部署能力；</br>3、能开发5万行+代码的中大型项目</br>可解决的现实问题：</br>1、可独立设计有一定复杂业务逻辑的表结构，表结构规模可达上百张</br>2、可根据业务模式、特点设计出适合的技术架构</br>3、开发的项目符合企业规范要求，且充分考虑高性能、安全、稳定性、可扩展性要求</br>市场价值：</br>满足大多数企业对Python开发工程师的要求，具备1年编程经验的同等技术的程序员薪资普遍在15000-20000"
  },
  {
    "phase": "第十阶段：算法&设计模式",
    "chapters": [
      {
        "chapterTitle": "第24章：常用算法&设计(4days)",
        "children": [
          "算法时间复杂度、空间复杂度讲解",
          "排序LowB三人组之冒泡、选择排序、插入排序实例讲解",
          "排序牛B三人组快排、堆排序、归并排序实例讲解",
          "其他排序如折半、希尔排序、计数排序、基数排序实例讲解",
          "二叉树数据机构讲解、完全二叉树、链式存储、顺序存储、大顶堆、小顶堆讲解",
          "各种排序算法复杂度对比、优缺点",
          "算法常见面试题剖析",
          "常用数据结构散列、堆、栈、链表、二叉树等讲解",
          "高级算法如动态规划、贪婪算法、分摊分析、矩阵运算、线性规划、最短路径等介绍",
          "设计模式介绍、作用、分类",
          "常见设计模式实例讲解，如工厂模式、单例模式、享元模式、代理模式、组合模式、观察者模式、策略模式、责任链模式、适配器模式等"
        ]
      }
    ],
    "studyTarget": "可掌握的核心能力：</br>1、掌握常用算法知识，充分理解算法的强大以及如何在实际开发中进行应用</br>2、掌握常用设计模式的实现，为日后各种类型软件设计提供了理论支持 </br>可解决的现实问题：</br>1、分析各种算法的复杂度，找出更高效的解决问题的算法</br>市场价值：</br>算法是开发人员必备知识，掌握算法能力的工程师往往能开发出更高效的程序"
  }
]
